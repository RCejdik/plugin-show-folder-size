/* eslint-disable */
!function o(l, a, f) {
function u(n, e) {
if (!a[n]) {
if (!l[n]) {
var r = "function" == typeof require && require;
if (!e && r) return r(n, !0);
if (d) return d(n, !0);
var t = new Error("Cannot find module '" + n + "'");
throw t.code = "MODULE_NOT_FOUND", t;
}
var i = a[n] = {
exports: {}
};
l[n][0].call(i.exports, function(e) {
return u(l[n][1][e] || e);
}, i, i.exports, o, l, a, f);
}
return a[n].exports;
}
for (var d = "function" == typeof require && require, e = 0; e < f.length; e++) u(f[e]);
return u;
}({
1: [ function(e, n, r) {
(function(e) {
"use strict";
var n = e.rcmail, r = ".button.show-folder-size";
e.pluginShowFolderSize = function() {
var e = $(r);
e.hasClass("disabled") || (e.addClass("disabled"), n.http_post("plugin.all-folder-size", {
_humanize: 1
}, !0));
};
n.addEventListener("plugin.callback_all_folder_size", function(e) {
$.each(e, function(e, n) {
$('#mailboxlist a[rel="'.concat(e, '"]')).attr("data-folder-size", "(".concat(n, ")"));
}), $(r).removeClass("disabled");
});
}).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {});
}, {} ]
}, {}, [ 1 ]);
