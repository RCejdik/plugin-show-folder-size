/* eslint-disable */

!function e(r, n, o) {
function t(a, l) {
if (!n[a]) {
if (!r[a]) {
var f = "function" == typeof require && require;
if (!l && f) return f(a, !0);
if (i) return i(a, !0);
var s = new Error("Cannot find module '" + a + "'");
throw s.code = "MODULE_NOT_FOUND", s;
}
var d = n[a] = {
exports: {}
};
r[a][0].call(d.exports, (function(e) {
return t(r[a][1][e] || e);
}), d, d.exports, e, r, n, o);
}
return n[a].exports;
}
for (var i = "function" == typeof require && require, a = 0; a < o.length; a++) t(o[a]);
return t;
}({
1: [ function(e, r, n) {
(function(e) {
"use strict";
var r = e.$, n = e.rcmail, o = function(e) {
var n = void 0 !== e ? '[rel="'.concat(e, '"]') : "[rel]";
return r("#mailboxlist a".concat(n));
};
n.addEventListener("plugin.callback_folder_size", (function(e) {
r.each(e, (function(e, r) {
o(e).attr("data-folder-size", "(".concat(r, ")"));
})), r("a.show-folder-size").removeClass("disabled");
})), e.plugin_show_folder_size = function() {
var e = r("a.show-folder-size");
e.hasClass("disabled") || (e.addClass("disabled"), o().attr("data-folder-size", ""), 
n.http_post("plugin.folder-size", {
_folders: "__ALL__",
_humanize: 1
}, !0));
};
}).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {});
}, {} ]
}, {}, [ 1 ]);
