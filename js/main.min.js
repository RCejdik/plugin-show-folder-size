/* eslint-disable */
!function i(a, l, f) {
function d(r, e) {
if (!l[r]) {
if (!a[r]) {
var n = "function" == typeof require && require;
if (!e && n) return n(r, !0);
if (u) return u(r, !0);
var t = new Error("Cannot find module '" + r + "'");
throw t.code = "MODULE_NOT_FOUND", t;
}
var o = l[r] = {
exports: {}
};
a[r][0].call(o.exports, function(e) {
return d(a[r][1][e] || e);
}, o, o.exports, i, a, l, f);
}
return l[r].exports;
}
for (var u = "function" == typeof require && require, e = 0; e < f.length; e++) d(f[e]);
return d;
}({
1: [ function(e, r, n) {
(function(e) {
"use strict";
var n = e.$, r = e.rcmail, t = "a.show-folder-size";
e.pluginShowFolderSize = function() {
var e = n(t);
e.hasClass("disabled") || (e.addClass("disabled"), o().attr("data-folder-size", ""), 
r.http_post("plugin.folder-size", {
_folders: "__ALL__",
_humanize: 1
}, !0));
};
var o = function(e) {
var r = void 0 !== e ? '[rel="'.concat(e, '"]') : "[rel]";
return n("#mailboxlist a".concat(r));
};
r.addEventListener("plugin.callback_folder_size", function(e) {
n.each(e, function(e, r) {
o(e).attr("data-folder-size", "(".concat(r, ")"));
}), n(t).removeClass("disabled");
});
}).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {});
}, {} ]
}, {}, [ 1 ]);
