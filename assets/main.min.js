/* eslint-disable */

!function e(n, o, i) {
function r(a, l) {
if (!o[a]) {
if (!n[a]) {
var f = "function" == typeof require && require;
if (!l && f) return f(a, !0);
if (t) return t(a, !0);
var s = new Error("Cannot find module '" + a + "'");
throw s.code = "MODULE_NOT_FOUND", s;
}
var d = o[a] = {
exports: {}
};
n[a][0].call(d.exports, (function(e) {
return r(n[a][1][e] || e);
}), d, d.exports, e, n, o, i);
}
return o[a].exports;
}
for (var t = "function" == typeof require && require, a = 0; a < i.length; a++) r(i[a]);
return r;
}({
1: [ function(e, n, o) {
(function(e) {
"use strict";
var n = e.$, o = e.rcmail, i = o.env["show_folder_size.config"] || {}, r = function() {
var e = n("a.show-folder-size");
e.hasClass("disabled") || (e.addClass("disabled"), a().attr("data-folder-size", ""), 
o.http_post("plugin.folder-size", {
_folders: "__ALL__",
_humanize: 1
}, !0));
}, t = function(e) {
n.each(e, (function(e, n) {
a(e).attr("data-folder-size", "(".concat(n, ")"));
})), n("a.show-folder-size").removeClass("disabled");
}, a = function(e) {
var o = void 0 !== e ? '[rel="'.concat(e, '"]') : "[rel]";
return n("#mailboxlist a".concat(o));
};
o.addEventListener("init", (function(e) {
o.addEventListener("plugin.callback_folder_size", t);
})), n((function() {
i.auto_show_folder_size && n("#mailboxlist").length && r();
})), e.plugin_show_folder_size = r;
}).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {});
}, {} ]
}, {}, [ 1 ]);
